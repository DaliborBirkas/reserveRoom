<?php

namespace App\Form;

use App\Class\TimeFrom;
use App\Class\TimeTo;
use App\Entity\Reservation;
use App\Entity\Room;
use App\Entity\User;
use App\Service\TimeFromService;
use App\Service\TimeToService;
use Doctrine\DBAL\Types\TextType;
use Doctrine\ORM\EntityRepository;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\DateType;
use Symfony\Component\Form\Extension\Core\Type\NumberType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;

class ReservationTypeUpdate extends  AbstractType
{
    private TimeFromService $timeFromService;
    private TimeToService $timeToService;
    public function __construct( TimeFromService $timeFromService,TimeToService $timeToService )
    {
        $this->timeFromService=$timeFromService;
        $this->timeToService=$timeToService;
    }
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        //  parent::buildForm($builder, $options); // TODO: Change the autogenerated stub

        $builder

            ->add('room', EntityType::class, [
                'class' => Room::class,
                'choice_label' => 'name',
                'invalid_message' =>'Room not valid',
                'query_builder' => function(EntityRepository $er){
                    return $er->createQueryBuilder('r');

                }
            ])
            ->add('users', EntityType::class, [
                'attr'=>[
                    'class'=>'col-md-6'
                ],
                'mapped'=>false,
                'multiple'=>true,
                'class' => User::class,
                'choice_label' => 'firstName',
                'invalid_message' =>'User not valid',
                'query_builder' => function(EntityRepository $er){
                   return $er->createQueryBuilder('u');
                }
            ])
            ->add('timeFrom',ChoiceType::class,[
                'choices'=>$this->timeFromService->getData()
            ])
            ->add('timeTo',ChoiceType::class,[
                'choices'=> $this->timeToService->getData()
            ])
            ->add('date',DateType::class,[
                'years'=>range(2022,2100)
            ])
        ;
    }
    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults([
           'data_class'=>Reservation::class]);
    }
}